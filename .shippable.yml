# vim ft=yaml

# After changing this file, check it on:
#   http://yaml-online-parser.appspot.com/

build:
  # https://github.com/Shippable/support/issues/3873
  pre_ci_boot:
      # image_name: drydock/u14pytall
      image_tag: v5.8.2
  ci:
    - echo $CI_REPORTS && mkdir -p $CI_REPORTS
    - echo $COVERAGE_REPORTS && mkdir -p $COVERAGE_REPORTS

env:
  global:
    - CI_REPORTS=shippable/testresults
    - COVERAGE_REPORTS=shippable/codecoverage

language: python

sudo: true

python:
  - 2.7
  - 3.5

cache: pip

before_install:
  - apt-get update # --fix-missing
  - apt-get install freetype*
  - apt-get install python-dev python-tk python3-tk
  - apt-get install pkg-config
  - pip install --upgrade pip wheel

install:
  - root=$PWD
  - mkdir libs
#  - cd $root/libs && git clone https://github.com/Borda/pyGCO.git
#  - cd $root/libs/pyGCO && pip install -r requirements.txt && python setup.py install
#  - rm -r -f $root/libs/pyGCO
#  - cd $root

  - pip install -r requirements.txt
  - pip install "nose>=1.3.7" coverage codecov "pytest>=3.0.5"

script:
  - mkdir data && mkdir output && mkdir results
  - gcc --version ; python --version ; pip --version ; pwd ; ls -l
  - python setup.py build_ext --inplace

  # - nosetests -v --with-xunit --xunit-file=$CI_REPORTS/nosetests.xml
  - nosetests -v --exe --with-doctest --with-xunit --with-coverage --cover-package=imsegm --xunit-file=$CI_REPORTS/nosetests.xml

  # ANNOTATION section
  - python handling_annotations/run_image_color_quantization.py -imgs "./data_images/drosophila_ovary_slice/segm_rgb/*.png"
  - python handling_annotations/run_image_convert_label_color.py -imgs "./data_images/drosophila_ovary_slice/segm/*.png" -out ./data_images/drosophila_ovary_slice/segm_rgb
  - python handling_annotations/run_overlap_images_segms.py  -imgs "./data_images/drosophila_ovary_slice/image/*.jpg" -segs ./data_images/drosophila_ovary_slice/segm -out ./results/overlap_ovary_segment
  - python handling_annotations/run_segm_annot_inpaint.py -imgs "./data_images/drosophila_ovary_slice/segm/*.png" --label 0
  - python handling_annotations/run_segm_annot_relabel.py -imgs "./data_images/drosophila_ovary_slice/center_levels/*.png" -out ./results/relabel_center_levels

  # SEGMENTATION section
  - rm -r -f results && mkdir results
  - python experiments_segmentation/run_compute_stat_annot_segm.py --visual
  - python experiments_segmentation/run_segm_slic_model_graphcut.py -i "data_images/drosophila_disc/image/img_[5,6].jpg" -cfg ./experiments_segmentation/sample_config.json --visual
  - python experiments_segmentation/run_segm_slic_classif_graphcut.py -l data_images/drosophila_ovary_slice/list_imgs-annot-struct_short.csv -i "data_images/drosophila_ovary_slice/image/insitu41*.jpg" -cfg ./experiments_segmentation/sample_config.json --visual

  # CENTER DETECT. section
  - rm -r -f results && mkdir results
  - python experiments_ovary_centres/run_create_annotation.py
  - python experiments_ovary_centres/run_center_candidate_training.py
  - python experiments_ovary_centres/run_center_prediction.py
  - python experiments_ovary_centres/run_center_clustering.py
  - python experiments_ovary_centres/run_center_evaluation.py

  # download MorphSnake
  - cd $root/libs && git clone https://github.com/Borda/morph-snakes.git
  - cd $root/libs/morph-snakes && pip install -r requirements.txt
  - cd $root/libs/morph-snakes && python setup.py install
  - cd $root
  # REGION GROWING section
  - rm -r -f results && mkdir results
  - python experiments_ovary_detect/run_RG2Sp_estim_shape-models.py
  - python experiments_ovary_detect/run_ovary_egg-segmentation.py -m ellipse_moments ellipse_ransac_mmt ellipse_ransac_crit GC_pixels-large GC_pixels-shape GC_slic-small GC_slic-shape rg2sp_greedy-single rg2sp_GC-mixture watershed_morph
  - python experiments_ovary_detect/run_ovary_segm_evaluation.py
  - python experiments_ovary_detect/run_export_user-annot-segm.py
  - python experiments_ovary_detect/run_cut_segmented_objects.py
  - python experiments_ovary_detect/run_ellipse_annot_match.py
  - python experiments_ovary_detect/run_ellipse_cut_scale.py
  - python experiments_ovary_detect/run_egg_swap_orientation.py

after_success:
  - python setup.py install

  - coverage xml -o $COVERAGE_REPORTS/coverage.xml
  - codecov  # public repository on Travis CI
  - coverage report
