version: 2.0

jobs:
  Py2:
      docker:
        - image: circleci/python:2.7
      steps: &steps
        - checkout
        # INSTALLATION
        - run: sudo apt-get update
        - run: sudo apt-get install tk-dev pkg-config python-dev python-tk
        - run: sudo pip install --upgrade pip setuptools
        - run: sudo pip install nose coverage pytest pytest-cov
        - run: pip install -r requirements.txt --user

        # BUILDING
        - run: mkdir libs && mkdir output && mkdir results && mkdir test-reports
        - run: gcc --version ; python --version ; pip --version ; pwd ; ls -l
        - run: python setup.py build_ext --inplace

        # TESTING
        - run: coverage run --source imsegm -m py.test imsegm -v --doctest-modules --junitxml=test-reports/pytest_junit.xml

        # ANNOTATION section
        - run: python handling_annotations/run_image_color_quantization.py -imgs "./data_images/drosophila_ovary_slice/segm_rgb/*.png"
        - run: python handling_annotations/run_image_color_quantization.py -imgs "./data_images/drosophila_ovary_slice/segm_rgb/*.png" -m position
        - run: python handling_annotations/run_image_convert_label_color.py -imgs "./data_images/drosophila_ovary_slice/segm/*.png" -out ./data_images/drosophila_ovary_slice/segm_rgb
        - run: python handling_annotations/run_image_convert_label_color.py -imgs "./data_images/drosophila_ovary_slice/segm_rgb/*.png" -out ./data_images/drosophila_ovary_slice/segm
        - run: python handling_annotations/run_overlap_images_segms.py  -imgs "./data_images/drosophila_ovary_slice/image/*.jpg" -segs ./data_images/drosophila_ovary_slice/segm -out ./results/overlap_ovary_segment
        - run: python handling_annotations/run_segm_annot_inpaint.py -imgs "./data_images/drosophila_ovary_slice/segm/*.png" --label 0
        - run: python handling_annotations/run_segm_annot_relabel.py -imgs "./data_images/drosophila_ovary_slice/center_levels/*.png" -out ./results/relabel_center_levels

        # SEGMENTATION section
        - run: python experiments_segmentation/run_compute_stat_annot_segm.py -a "data_images/drosophila_ovary_slice/annot_struct/*.png" -s "data_images/drosophila_ovary_slice/segm/*.png" --visual
        - run: python experiments_segmentation/run_segm_slic_model_graphcut.py -i "data_images/drosophila_disc/image/img_[5,6].jpg" -cfg ./experiments_segmentation/sample_config.json --visual
        - run: python experiments_segmentation/run_segm_slic_classif_graphcut.py -l data_images/drosophila_ovary_slice/list_imgs-annot-struct_short.csv -i "data_images/drosophila_ovary_slice/image/insitu41*.jpg" -cfg ./experiments_segmentation/sample_config.json --visual

        # CENTER DETECT. section
        - run: python experiments_ovary_centres/run_create_annotation.py
        - run: python experiments_ovary_centres/run_center_candidate_training.py
        - run: python experiments_ovary_centres/run_center_prediction.py
        - run: python experiments_ovary_centres/run_center_clustering.py
        - run: python experiments_ovary_centres/run_center_evaluation.py

        # download MorphSnake
        - run: cd libs && git clone https://github.com/Borda/morph-snakes.git
        - run: cd libs/morph-snakes && pip install --user -r requirements.txt && python setup.py install --user
        # REGION GROWING section
        - run: python experiments_ovary_detect/run_RG2Sp_estim_shape-models.py
        - run: python experiments_ovary_detect/run_ovary_egg-segmentation.py -m ellipse_moments ellipse_ransac_mmt ellipse_ransac_crit GC_pixels-large GC_pixels-shape GC_slic-small GC_slic-shape rg2sp_greedy-single rg2sp_GC-mixture watershed_morph
        - run: python experiments_ovary_detect/run_ovary_segm_evaluation.py --visual
        - run: python experiments_ovary_detect/run_export_user-annot-segm.py
        - run: python experiments_ovary_detect/run_cut_segmented_objects.py
        - run: python experiments_ovary_detect/run_ellipse_annot_match.py
        - run: python experiments_ovary_detect/run_ellipse_cut_scale.py
        - run: python experiments_ovary_detect/run_egg_swap_orientation.py

        # PASSING
        - run: python setup.py install --user
        - run: coverage report && coverage xml -o test-reports/coverage.xml

        - store_test_results:
            path: test-reports
        - store_artifacts:
            path: test-reports

  Py3:
      docker:
        - image: circleci/python:3.5
      steps: *steps

workflows:
  version: 2
  build:
    jobs:
      - Py2
      - Py3
