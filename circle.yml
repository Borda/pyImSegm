version: 2.0

jobs:
  Py2:
      docker:
        - image: circleci/python:2.7
      steps: &steps
        - checkout
        # INSTALLATION
        - run:
            name: Install Packages
            command: |
              sudo apt-get update
              sudo apt-get install tk-dev pkg-config python-dev python-tk
              sudo pip install --upgrade pip setuptools
              sudo pip install nose coverage pytest pytest-cov flake8
              sudo pip install -U backports.functools_lru_cache  # required for matplotlib @py2
              pip install -r requirements.txt --user

        # BUILDING
        - run:
            name: Building project
            command: |
              mkdir libs && mkdir output && mkdir results && mkdir test-reports
              gcc --version ; python --version ; pip --version ; pwd ; ls -l
              python setup.py build_ext --inplace

        # TESTING
        - run:
            name: Testing and Formating
            command: |
              unset DISPLAY
              coverage run --source imsegm -m py.test imsegm -v --doctest-modules --junitxml=test-reports/pytest_junit.xml
              python setup.py check -m -s
              flake8 . --ignore=E402,E731 --max-line-length=100

        # ANNOTATION section
        - bash handling_annotations/test_annotations.sh

        # SEGMENTATION section
        - bash experiments_segmentation/test_segmentations.sh

        # CENTER DETECT. section
        - bash experiments_ovary_centres/test_ovary_cebters.sh

        # REGION GROWING section
        - bash experiments_ovary_detect/test_ovary_detect.sh

        # PASSING
        - run:
            name: Finalise
            command: |
              python setup.py install --user
              coverage report && coverage xml -o test-reports/coverage.xml

        - store_test_results:
            path: test-reports
        - store_artifacts:
            path: test-reports

  Py3:
      docker:
        - image: circleci/python:3.5
      steps: *steps

workflows:
  version: 2
  build:
    jobs:
      - Py2
      - Py3
